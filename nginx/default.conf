# กำหนด "ปลายทาง" ของ service ภายใน Docker
upstream client_app {
    # ภายใน Next.js container ของคุณรันบน port 4000
    server client:4000;
}

upstream api_app {
    # ภายใน NestJS container ของคุณรันบน port 8000
    server api:8000;
}

# --- ✅ นี่คือจุดที่แก้ไข (1/2) ---
upstream oee_app {
    # เชื่อมต่อโดยตรงไปยัง container 'smartoee-api'
    # ผ่าน network 'oee-net' ที่เราเชื่อมไว้ใน docker-compose
    # โดยใช้ port *ภายใน* (จาก docker ps คือ 3000)
    server smartoee-api:3000;
}
# -------------------------


server {
    listen 80; # Nginx รับฟังที่ port 80 (ภายใน container)

    # ----------------------------------------------------
    # Rule 1: Proxy WebSocket ของ OEE หลัก (3010)
    # Client จะเรียกมาด้วย path /ws-oee/socket.io/
    # ----------------------------------------------------
    location /ws-oee/socket.io/ { # ✅ แก้ไข path ให้ตรง
        proxy_pass http://oee_app/socket.io/; # ส่งต่อไปที่ 3000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # ----------------------------------------------------
    # Rule 2: Proxy API ของ OEE หลัก (3010)
    # ----------------------------------------------------
    location /api-oee/ {
        rewrite /api-oee/(.*) /api/$1 break;
        proxy_pass http://oee_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ----------------------------------------------------
    # Rule 3: Proxy WebSocket ของ QRSmart API (8000)
    # Client จะเรียกมาด้วย path /ws-qr/socket.io/
    # ----------------------------------------------------
    location /ws-qr/socket.io/ { # ✅ แก้ไข path ให้ตรง
        proxy_pass http://api_app/socket.io/; # ส่งต่อไปที่ 8000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # ----------------------------------------------------
    # Rule 4: Proxy REST API ของ QRSmart API (8000)
    # ----------------------------------------------------
    location /api-qr/ {
        rewrite /api-qr/(.*) /$1 break;
        proxy_pass http://api_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ----------------------------------------------------
    # Rule 5: Proxy สำหรับ Hot-Reload ของ Next.js (ถ้ามี)
    # ----------------------------------------------------
    location /_next/webpack-hmr {
        proxy_pass http://client_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # ----------------------------------------------------
    # Rule 6: Proxy traffic ทั้งหมดที่เหลือไปให้ Next.js (Client)
    # ----------------------------------------------------
    location / {
        proxy_pass http://client_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

